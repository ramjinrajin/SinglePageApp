@model ReferralBonus.Models.Feed

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE-Edge">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">
    <title>Edit</title>



    <script type="text/javascript" src="~/Bootstrap/bootstrap-3.3.6-dist/js/bootstrap.min.js"></script>
    <link rel="stylesheet" type="text/css" href="~/Bootstrap/bootstrap-3.3.6-dist/css/bootstrap-theme.min.css">
    <link rel="stylesheet" type="text/css" href="~/Bootstrap/bootstrap-3.3.6-dist/css/bootstrap.min.css">
    <link rel="stylesheet" type="text/css" href="~/Style/style.css">

    <link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
    <script src="//code.jquery.com/jquery-1.10.2.js"></script>
    <script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
    <link rel="stylesheet" href="/resources/demos/style.css">


    <script type="text/javascript">

        $(document).ready(function () {
            $(".imagetag").click(function () {
                $(".imagetag").hide();
                $('.imagetag').val("");
            });

            $(".imagetag").click(function () {

                $(".image-preview-filename").css({ 'display': 'block' });
            });
        });

    </script>

    <style>
        #Rowstatus {
            border-radius: 3px;
            height: 30px;
        }

        .imagetag {
            background: #FFFFFF;
            border-radius: 5px;
        }
    </style>

</head>
<body>

    <div class="navbar navbar-default navbar-fixed-top">
        <!--all the class names are bootstrap-->
        <div class="container">

            <div class="navbar-header">
                <a class="navbar_Brand_custom" href="~/home/index">Maximum Referral</a>
                <!--a means link -->
            </div>
            <ul class="navbar-nav nav navbar-right custom_position">
                <!--ul means unordered list ,an unordered list alwauys have list items -->
                <li class="active"><a href="~/home/Index">Home</a>
                <li class=""><a href="~/home/Subscribe">Subscribe</a>
<li class=""><a href="~/home/ContactUs">ContactUs</a>
                <li class=""><a class="btn" href="/Signout/index">Sign out</a></li>
            </ul>

            <form class="navbar-form navbar-left" role="search">
                <div class="form-group">
                    <input type="text" class="form-control" placeholder="Search">
                </div>
                <button type="submit" class="btn btn-default">Submit</button>
            </form>

        </div>
    </div>

    <div class="container" style="margin-top:5%">
        <div class="jumbotron">


            @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h4 style="text-align:center">Edit Feed</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.ID)

                    <div class="form-group">
                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.image, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.image, new { htmlAttributes = new { @class = "form-control imagetag" } })
                            <td><input type="file" accept="image/png, image/jpeg, image/gif" class="form-control image-preview-filename" style="display:none" name="File" id="File" /></td>
                            <button type="button" class="imagetag">Change/Remove Image</button>
                            @Html.ValidationMessageFor(model => model.image, "", new { @class = "text-danger" })
                        </div>
                    </div>




                    <div class="form-group">
                        @Html.LabelFor(model => model.link, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.link, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.link, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Rowstatus, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">

                            @*@Html.EditorFor(model => model.Rowstatus, new { htmlAttributes = new { @class = "form-control" } })*@

                            @Html.DropDownList("Rowstatus", new List<SelectListItem>
                {
                new SelectListItem { Text="Enable",Value="A"},
                new SelectListItem { Text="Disable",Value="D"},
                }, "Select Status")

                            @Html.ValidationMessageFor(model => model.Rowstatus, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="image" class="control-label col-md-2">Category</label>
                        <div class="col-xs-4 navbar-form navbar-left">
                            @Html.DropDownList("CategoryID", new List<SelectListItem>
                {
                new SelectListItem { Text="Business",Value="2"},
                new SelectListItem { Text="Entertainment",Value="3"},
                }, "---Select---", new { @class = "form-control", @id = "cat_drop" })
                            @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                        </div>
                    </div>



                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            }

            <div>
                @Html.ActionLink("Back to Home", "Index") &nbsp;&nbsp;&nbsp;
                @Html.ActionLink("Back to Manage Feed", "ManageFeed")
            </div>

        </div>
    </div>



</body>
</html>
